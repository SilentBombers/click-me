name: cd for transfer-service
on:
  push:
    branches: [ main ]
    paths:
      - transfer-service/**
      - .github/**

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  DOCKER_REPO: ${{ secrets.DOCKER_REPO }}
  REGION: ${{ secrets.REGION }}
  WORKSTATION_IMAGE: transfer-service
  VERSION: '1.0.1'
  IMAGE: ${{ secrets.REGION }}-docker.pkg.dev/${{ secrets.PROJECT_ID }}/${{ secrets.DOCKER_REPO }}/transfer-service

jobs:
  build:
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./transfer-service

    steps:
      - name: Check out Repository
        uses: actions/checkout@v3

      - name: Set Application Yml
        run : |
          envsubst < ./src/main/resources/application-prod.yml > ./src/main/resources/application-prod.yml.temp
          mv ./src/main/resources/application-prod.yml.temp ./src/main/resources/application-prod.yml
        env:
          REDIS_HOST: ${{secrets.REDIS_HOST}}
          REDIS_PORT: ${{secrets.REDIS_PORT}}
          DATASOURCE_URL: ${{secrets.DB_URL}}
          DATASOURCE_USERNAME: ${{secrets.DB_USERNAME}}
          DATASOURCE_PASSWORD: ${{secrets.DB_PASSWORD}}

      - name: Set up google auth
        id: 'auth'
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCE_SA_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ env.PROJECT_ID }}
          install_components: gke-gcloud-auth-plugin

      - name: Use gcloud CLI
        run: gcloud info

      - name: Docker auth
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'corretto'

      - name: Run tests
        run: ../gradlew test

      - name: Docker Build
        if: success()
        run: ../gradlew docker

      - name: Docker tag
        run: docker tag click-me-${{env.WORKSTATION_IMAGE}}:${{env.VERSION}} ${{env.IMAGE}}

      - name: Docker Push
        run: docker push ${{env.IMAGE}}

      - name: Deploy
        run: |
          gcloud container clusters get-credentials autopilot-cluster-1 --region ${{env.REGION}} --project ${{env.PROJECT_ID}}
          sed "s,\${image},${{ env.IMAGE }},g" resources.yaml > cronJob.yaml
          kubectl apply -f ./cronJob.yaml
